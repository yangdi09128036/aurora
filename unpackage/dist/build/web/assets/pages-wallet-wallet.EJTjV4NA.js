import{s as t,n as a,z as e,r as l,c as o,w as s,i as n,o as c,d as r,e as i,t as u,q as d,u as f,F as h,g as p,j as _,h as g,I as m,x as w}from"./index-DyUMtph-.js";import{_ as b}from"./uni-popup.C65w3SNd.js";import{r as I}from"./uni-app.es.BWQr3qZr.js";import{s as y}from"./store.CDKRaDHf.js";import{_ as k}from"./left.CpwphMH_.js";import{_ as v}from"./_plugin-vue_export-helper.BCo6x5W8.js";const A=v({data:()=>({walletInfo:{_id:"",balance:0,user_id:""},transactions:[],rechargeAmount:"",quickAmounts:[50,100,200,500,1e3,2e3]}),computed:{userInfo:()=>y.userInfo},onLoad(){this.loadWalletInfo()},onShow(){this.loadWalletInfo()},methods:{getTransactionImage:t=>(console.log("交易记录",t),"credit"===t.type?"/static/recharge.png":"debit"===t.type&&t.productImage||"/static/wallet/payment.png"),async loadWalletInfo(){try{if(console.log("加载钱包信息",y.userInfo),!this.userInfo||!this.userInfo._id)return console.error("User info not available"),void t({title:"用户信息不可用，请先登录",icon:"none"});const e=a.database(),l=await e.collection("wallet").where({user_id:this.userInfo._id}).get();console.log("钱包查询结果",l),l&&l.result&&l.result.data&&l.result.data.length>0?(this.walletInfo=l.result.data[0],console.log("获取到钱包信息",this.walletInfo)):(console.log("未找到钱包，创建新钱包"),await this.createWallet()),await this.loadTransactions()}catch(e){console.error("加载钱包信息失败:",e),t({title:"加载钱包信息失败",icon:"none"})}},async createWallet(){try{const t=a.database(),e=await t.collection("wallet").where({user_id:this.userInfo._id}).get();if(e&&e.result&&e.result.data&&e.result.data.length>0)return this.walletInfo=e.result.data[0],void console.log("找到已存在的钱包",this.walletInfo);const l=await t.collection("wallet").add({user_id:this.userInfo._id,balance:0});if(console.log("创建钱包结果",l),!(l&&l.result&&l.result.id))throw new Error("创建钱包失败，未返回有效ID");this.walletInfo={_id:l.result.id,user_id:this.userInfo._id,balance:0},console.log("新钱包信息",this.walletInfo)}catch(e){console.error("创建钱包失败:",e),t({title:"创建钱包失败",icon:"none"})}},async loadTransactions(){try{const t=a.database(),e=await t.collection("wallet_transactions").where({user_id:this.userInfo._id}).orderBy("created_at","desc").limit(10).get();e&&e.result&&e.result.data?(this.transactions=e.result.data,console.log("交易记录加载成功:",this.transactions)):(console.log("没有交易记录或结构不正确",e),this.transactions=[])}catch(e){console.error("加载交易记录失败:",e),t({title:"加载交易记录失败",icon:"none"})}},async handleRecharge(){try{if(!this.walletInfo._id&&(console.log("钱包信息不完整，重新加载"),await this.loadWalletInfo(),!this.walletInfo._id))return void t({title:"钱包信息加载失败，请重试",icon:"none"});const e=parseFloat(this.rechargeAmount);if(isNaN(e)||e<=0)return void t({title:"请输入有效金额",icon:"none"});const l="number"==typeof this.walletInfo.balance?this.walletInfo.balance:0;if("number"!=typeof l)return console.error("钱包余额数据类型不正确"),void t({title:"充值失败，请重试",icon:"none"});const o=a.database();console.log("充值前的余额",l);const s=l+e;console.log("充值后的余额",s);const n=await o.collection("wallet").doc(this.walletInfo._id).update({balance:s,updated_at:Date.now()});if(console.log("更新结果",n),!n||!n.result||!n.result.updated)return console.error("更新钱包余额失败",n),void t({title:"充值失败，请重试",icon:"none"});const c=await o.collection("wallet_transactions").add({user_id:this.userInfo._id,amount:e,type:"credit",balance:s});console.log("交易记录创建结果",c),this.walletInfo.balance=s,await this.loadTransactions(),t({title:"充值成功",icon:"success"}),this.hideRechargePopup()}catch(e){console.error("充值失败:",e),t({title:"充值失败，请重试",icon:"none"})}},formatBalance:t=>("number"==typeof t?t:0).toFixed(2),formatDate(t){if(!t)return"";const a=new Date(t);return`${a.getFullYear()}-${String(a.getMonth()+1).padStart(2,"0")}-${String(a.getDate()).padStart(2,"0")} ${String(a.getHours()).padStart(2,"0")}:${String(a.getMinutes()).padStart(2,"0")}:${String(a.getSeconds()).padStart(2,"0")}`},handleWithdraw(){t({title:"提现功能正在开发",icon:"none"})},showRechargePopup(){this.$refs.rechargePopup.open()},hideRechargePopup(){this.$refs.rechargePopup.close(),this.rechargeAmount=""},selectQuickAmount(t){this.rechargeAmount=t.toString()},viewAllTransactions(){t({title:"正在开发中",icon:"none"})},navBack(){e()}}},[["render",function(t,a,e,y,v,A){const C=p,S=_,x=n,P=g,T=m,W=I(l("uni-popup"),b);return c(),o(x,{class:"wallet-container"},{default:s((()=>[r(x,{class:"nav-bar"},{default:s((()=>[r(x,{class:"nav-left",onClick:A.navBack},{default:s((()=>[r(C,{src:k,mode:"",class:"nav-icon"}),r(S,{class:"nav-title"},{default:s((()=>[i("余额")])),_:1})])),_:1},8,["onClick"])])),_:1}),r(x,{class:"balance-card"},{default:s((()=>[r(x,{class:"security-tip"},{default:s((()=>[r(S,{class:"security-icon"},{default:s((()=>[i("🛡️")])),_:1}),r(S,{class:"security-text"},{default:s((()=>[i("资金安全有保障")])),_:1}),r(S,{class:"security-arrow"},{default:s((()=>[i(">")])),_:1})])),_:1}),r(x,{class:"balance-section"},{default:s((()=>[r(S,null,{default:s((()=>[i("可用余额(元)")])),_:1}),r(S,{class:"balance-amount"},{default:s((()=>[i(u(A.formatBalance(v.walletInfo.balance)),1)])),_:1})])),_:1}),r(x,{class:"action-buttons"},{default:s((()=>[r(P,{class:"action-btn withdraw",onClick:A.handleWithdraw},{default:s((()=>[i("提现")])),_:1},8,["onClick"]),r(P,{class:"action-btn recharge",onClick:A.showRechargePopup},{default:s((()=>[i("充值")])),_:1},8,["onClick"])])),_:1}),r(x,{class:"promo-banner"},{default:s((()=>[r(x,{class:"promo-icon"},{default:s((()=>[i("🔊")])),_:1}),r(S,{class:"promo-text"},{default:s((()=>[i("余额"+u(A.formatBalance(v.walletInfo.balance))+"元，每天支付享立减",1)])),_:1}),r(S,{class:"promo-link"},{default:s((()=>[i("去看看")])),_:1})])),_:1})])),_:1}),r(x,{class:"transactions"},{default:s((()=>[r(x,{class:"transactions-header"},{default:s((()=>[r(S,{class:"header-title"},{default:s((()=>[i("余额变动明细")])),_:1}),r(S,{class:"header-link",onClick:A.viewAllTransactions},{default:s((()=>[i("全部 >")])),_:1},8,["onClick"])])),_:1}),r(x,{class:"transaction-list"},{default:s((()=>[(c(!0),d(h,null,f(v.transactions,((t,a)=>(c(),o(x,{class:"transaction-item",key:a},{default:s((()=>[r(x,{class:"transaction-icon"},{default:s((()=>[r(C,{src:A.getTransactionImage(t),class:"trans-icon"},null,8,["src"])])),_:2},1024),r(x,{class:"transaction-info"},{default:s((()=>[r(S,{class:"transaction-title"},{default:s((()=>[i(u("debit"===t.type?"拼多多订单支付":"多多钱包余额充值"),1)])),_:2},1024),r(x,null,{default:s((()=>[r(S,{class:"transaction-time"},{default:s((()=>[i(u(A.formatDate(t.created_at)),1)])),_:2},1024)])),_:2},1024)])),_:2},1024),r(x,{class:"transaction-amount"},{default:s((()=>[r(S,{class:w(["amount","debit"===t.type?"debit":"credit"])},{default:s((()=>[i(u("debit"===t.type?"-":"+")+u(t.amount.toFixed(2)),1)])),_:2},1032,["class"]),r(S,{class:"balance"},{default:s((()=>[i("余额"+u(t.balance.toFixed(2))+"元",1)])),_:2},1024)])),_:2},1024)])),_:2},1024)))),128))])),_:1})])),_:1}),r(W,{ref:"rechargePopup",type:"bottom"},{default:s((()=>[r(x,{class:"recharge-popup"},{default:s((()=>[r(x,{class:"popup-header"},{default:s((()=>[r(S,{class:"popup-title"},{default:s((()=>[i("充值金额")])),_:1}),r(S,{class:"popup-close",onClick:A.hideRechargePopup},{default:s((()=>[i("×")])),_:1},8,["onClick"])])),_:1}),r(x,{class:"amount-input"},{default:s((()=>[r(S,{class:"currency-symbol"},{default:s((()=>[i("¥")])),_:1}),r(T,{type:"digit",modelValue:v.rechargeAmount,"onUpdate:modelValue":a[0]||(a[0]=t=>v.rechargeAmount=t),class:"amount-field",placeholder:"请输入充值金额"},null,8,["modelValue"])])),_:1}),r(x,{class:"quick-amounts"},{default:s((()=>[(c(!0),d(h,null,f(v.quickAmounts,(t=>(c(),o(x,{class:w(["amount-option",{selected:v.rechargeAmount===t.toString()}]),key:t,onClick:a=>A.selectQuickAmount(t)},{default:s((()=>[i(" ¥"+u(t),1)])),_:2},1032,["onClick","class"])))),128))])),_:1}),r(P,{class:"confirm-recharge",onClick:A.handleRecharge,disabled:!v.rechargeAmount||parseFloat(v.rechargeAmount)<=0},{default:s((()=>[i(" 确认充值 ")])),_:1},8,["onClick","disabled"])])),_:1})])),_:1},512)])),_:1})}],["__scopeId","data-v-99a4486c"]]);export{A as default};
